[tool.poetry]
name = "warehouse-bot"
version = "0.1.0"
description = "Telegram bot for warehouse management"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "warehouse_bot"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.116.0"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
aiogram = "^3.7.0"
sqlmodel = "^0.0.24"
psycopg = "^3.2.10"
redis = "^6.4.0"
alembic = "^1.13.1"
pydantic-settings = "^2.3.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
slowapi = "^0.1.9"
asyncpg = "^0.30.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.0"
pytest-cov = "^6.2.0"
pytest-asyncio = "^0.23.7"
httpx = "^0.28.0"
pre-commit = "^4.3.0"
ruff = "^0.12.0"
mypy = "^1.10.0"
bandit = "^1.7.9"
radon = "^6.0.1"
safety = "^3.2.3"
pip-audit = "^2.7.3"
aiosqlite = "^0.21.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# --- Tool Configurations ---

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "UP", "B", "C4", "SIM", "ARG"]
ignore = []

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true # More practical for projects with many deps

[tool.pytest.ini_options]
pythonpath = "."
asyncio_mode = "auto"

[tool.coverage.run]
omit = ["*/tests/*"]

[tool.bandit]
exclude_dirs = [".venv"]
# B104 - `hardcoded_bind_all_interfaces` - Игнорируем, так как в Docker это норма
# B101 - `assert_used` - Игнорируем, так как assert используется только в тестах
skips = ["B104", "B101"]
